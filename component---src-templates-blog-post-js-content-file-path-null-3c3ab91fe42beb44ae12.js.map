{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-null-3c3ab91fe42beb44ae12.js","mappings":"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","sources":["webpack://catatan-bayu/./src/components/bio.js","webpack://catatan-bayu/./src/components/ArticleData.js","webpack://catatan-bayu/./src/components/Breadcrumb.js","webpack://catatan-bayu/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-picture.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Halaman ini ditulis oleh <strong>{author.name}</strong>, {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nexport default function ArticleData({ date, wordCount }) {\n  const data = useStaticQuery(graphql`\n    query ArticleBioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"article-data\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-picture.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      <div>\n        <p className=\"author\"><a href=\"https://bayusamudra.my.id\">{author.name}</a></p>\n        <p>{new Intl.DateTimeFormat(\"id\", { dateStyle: \"long\" }).format(new Date(date))} • {Math.ceil(wordCount / 200)} menit</p>\n      </div>\n    </div>\n  )\n}\n","import { Link } from 'gatsby';\nimport React from 'react'\n\nexport default function Breadcrumb({ slug }) {\n  let temp = \"\";\n  const links = slug.slice(1, -1).split('/').map((token) => {\n    temp += `/${token}`;\n    return { url: temp, token };\n  });\n\n  return (\n    <nav>\n      <ul className='breadcrumb'>\n        <li><Link to='/'>Home</Link></li>\n        {\n          links.map(({ url, token }, idx) => {\n            if (idx === links.length - 1) {\n              return <li>{token}</li>\n            }\n\n            return <li>\n              <Link to={url}>{token}</Link>\n            </li>\n          })\n        }\n      </ul>\n    </nav>\n  )\n}\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport ArticleData from \"../components/ArticleData\"\nimport Breadcrumb from \"../components/Breadcrumb\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const picture = post.frontmatter.picture\n  const category = post.frontmatter?.category ?? []\n\n  return (\n    <Layout location={location} title={siteTitle} img={picture}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        lang=\"id\"\n        image={picture}\n      />\n      <main\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <Breadcrumb slug={post.fields.slug} />\n        <header>\n          {\n            post.frontmatter?.icon ? (\n              <div className=\"article-icon\">\n                {post.frontmatter.icon}\n              </div>\n            ) : null\n          }\n          <h1 className=\"title\" itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p className=\"subtitle\">{post.frontmatter.subtitle}</p>\n          <ArticleData date={post.frontmatter.date} wordCount={10} />\n        </header>\n        <article dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\" />\n        <div className=\"category\">\n          {category.length > 0 ? <h2>Kategori Artikel</h2> : null}\n          <ul>\n            {category.map((el) => {\n              return <li key={el}>\n                <Link to={`/category/${el}`}>\n                  {el}\n                </Link>\n              </li>\n            })}\n          </ul>\n        </div>\n\n        <footer>\n          <h2 className=\"author\">\n            Tentang Penulis\n          </h2>\n          <Bio />\n        </footer>\n      </main>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={\"/\" + previous.fields.slug} rel=\"prev\">\n                ‹ {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={\"/\" + next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ›\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query (\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        category\n        title\n        date(formatString: \"DD MMMM YYYY\")\n        description\n        icon\n        subtitle\n        picture {\n          childImageSharp {\n            gatsbyImageData(\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF]\n           )\n          }\n        }\n      }\n      fields {\n        slug\n      }\n    }\n    previous: markdownRemark(frontmatter: {draft: {eq: false}}, id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(frontmatter: {draft: {eq: false}}, id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","S","layout","formats","src","width","height","quality","alt","name","summary","ArticleData","date","wordCount","href","Intl","DateTimeFormat","dateStyle","format","Date","Math","ceil","Breadcrumb","slug","temp","links","slice","split","map","token","url","Link","to","idx","length","data","location","post","markdownRemark","siteTitle","title","previous","next","picture","frontmatter","category","img","description","excerpt","lang","image","itemScope","itemType","fields","icon","itemProp","subtitle","dangerouslySetInnerHTML","__html","html","el","key","style","display","flexWrap","justifyContent","listStyle","padding","rel"],"sourceRoot":""}